stages:
  - build
  - test
  - deploy

build_backend:
  stage: build
  image: maven:3.8.6-openjdk-18
  script:
    - cd BackEnd/Proyecto_Integrador_G2
    - echo "Building app..."
    - mvn clean
    - mvn clean install
    - echo "Finished building the app."
  artifacts:
    paths:
      - BackEnd/Proyecto_Integrador_G2/target/Proyecto_Integrador_G2-0.0.1-SNAPSHOT.jar
  rules:
    - changes:
        - BackEnd/**/*

build_frontend:
  stage: build
  image: node:latest
  script:
    - echo "Building the app"
    - cd FrontEnd/integrador
    - ls
    - npm --force install
    - CI=false npm run build
    - echo "Finished building the app."
    - cd build
    - ls
    - cd ..
    - pwd
  artifacts:
    name: react_build
    paths:
      - ./FrontEnd/integrador/build/
  rules:
    - changes:
        - FrontEnd/**/*

test_backend:
  stage: test
  image: maven:3.8.6-openjdk-18
  script:
    - echo "Testing the app"
    - cd BackEnd/Proyecto_Integrador_G2
    - mvn test
    - echo "Finished testing the app."
  rules:
    - changes:
        - BackEnd/**/*

test_frontend:
  stage: test
  image: node:latest
  script:
    - echo "Testing the app"
    - cd FrontEnd/integrador
    - npm install
    - npm test
    - echo "Finished testing the app."
  rules:
    - changes:
        - FrontEnd/**/*

deploy_Backend:
  stage: deploy
  needs: [build_backend]
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H "$DEPLOY_SERVER_IP" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Deploying started..."
    - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop proyectoIntegrador.service"
    - scp BackEnd/Proyecto_Integrador_G2/target/Proyecto_Integrador_G2-0.0.1-SNAPSHOT.jar ubuntu@$DEPLOY_SERVER_IP:~/
    - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start proyectoIntegrador.service"
    - echo "Finished deploying the app."
  rules:
    - changes:
        - BackEnd/**/*

deploy_Frontend:
  stage: deploy
  needs: [build_frontend]
  image: python:latest
  script:
    - pip install awscli
    - aws configure set aws_secret_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 sync FrontEnd/integrador/build/ s3://g2-frontend-destiautos
  rules:
    - changes:
        - FrontEnd/**/*
